<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Big Wilte Cat&#39;s Home</title>
    <link>https://zyt153.github.io/post/</link>
    <description>Recent content in Posts on Big Wilte Cat&#39;s Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 22 Jan 2024 13:03:01 +0800</lastBuildDate><atom:link href="https://zyt153.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>k8s学习笔记-黑马</title>
      <link>https://zyt153.github.io/post/note_k8s_heima/</link>
      <pubDate>Mon, 22 Jan 2024 13:03:01 +0800</pubDate>
      
      <guid>https://zyt153.github.io/post/note_k8s_heima/</guid>
      <description>为了准备CKA看了b站上黑马程序员的k8s课程，总体来说比较基础，也有一些过时的内容，但优点在于简单、全面、清晰。参考评论区的笔记记录一下。</description>
    </item>
    
    <item>
      <title>golang - 获取cluster中的issuer</title>
      <link>https://zyt153.github.io/post/golang_get_cert_manager_issuer/</link>
      <pubDate>Thu, 21 Dec 2023 17:37:30 +0800</pubDate>
      
      <guid>https://zyt153.github.io/post/golang_get_cert_manager_issuer/</guid>
      <description>最近需要在项目中检查用户提供的cluster issuer是否存在，需要用到cert-manager pkg，但是对于golang和k8s新手来</description>
    </item>
    
    <item>
      <title>View certificate with ingress in kind cluster </title>
      <link>https://zyt153.github.io/post/cert_in_kind_cluster/</link>
      <pubDate>Sat, 16 Dec 2023 20:57:56 +0800</pubDate>
      
      <guid>https://zyt153.github.io/post/cert_in_kind_cluster/</guid>
      <description>Env Runtime: Colima Cluster: Kind Ingress controller: Contour Certification: Cert-manager Statement I&amp;rsquo;m testing in my local env totally, and have no DNS. I want to check the self-signed cert created by issuer. Already created a cluster with kind: Contour_Create_a_Kind_Cluster Service: apiVersion: v1 kind: Service metadata: name: service-name namespace: ns spec: ports: - name: external port: 8080 targetPort: 8080 selector: app: app-name type: LoadBalancer A self-signed issuer: apiVersion: cert-manager.io/v1 kind: Issuer</description>
    </item>
    
    <item>
      <title>Mark for CKA</title>
      <link>https://zyt153.github.io/post/mark_for_cka/</link>
      <pubDate>Sat, 16 Dec 2023 20:45:35 +0800</pubDate>
      
      <guid>https://zyt153.github.io/post/mark_for_cka/</guid>
      <description>Official Website Training portal Practice in Github CKA Practice Exercises Kubernetes Certified Administration K8s Practice Training Awesome Kubernetes Some Blogs CKA 考試全攻略流程 Kubernetes CKA 证书备考笔记</description>
    </item>
    
    <item>
      <title>K8s - Solve pod is always pending</title>
      <link>https://zyt153.github.io/post/pod_always_pending/</link>
      <pubDate>Fri, 15 Dec 2023 14:38:06 +0800</pubDate>
      
      <guid>https://zyt153.github.io/post/pod_always_pending/</guid>
      <description>Statement I&amp;rsquo;m using colima &amp;amp; kind &amp;amp; kubebuilder to test a operator project in my local env. The way I set up a local kind cluster is Contour_Create_a_Kind_Cluster. The cluster looks like: &amp;gt;&amp;gt; kubectl get node NAME STATUS ROLES AGE VERSION kind-control-plane Ready control-plane 24h v1.27.3 kind-worker Ready &amp;lt;none&amp;gt; 24h v1.27.3 Then use make run to start and deploy a service. However, when I used kubectl get all -n ns</description>
    </item>
    
    <item>
      <title>Customer case - content length is zero</title>
      <link>https://zyt153.github.io/post/pr_record_2/</link>
      <pubDate>Sun, 08 Oct 2023 16:15:32 +0800</pubDate>
      
      <guid>https://zyt153.github.io/post/pr_record_2/</guid>
      <description>这是一个今年上半年非常令我头大的PR，一方面是产生错误的原因不好找，另一方面是和客户的沟通比较费劲。最终我在一次客户会议中解决了问题，当时觉</description>
    </item>
    
    <item>
      <title>一次漫长的customer case问题定位 - OOM</title>
      <link>https://zyt153.github.io/post/pr_record_1/</link>
      <pubDate>Sun, 17 Sep 2023 11:36:59 +0800</pubDate>
      
      <guid>https://zyt153.github.io/post/pr_record_1/</guid>
      <description>在去年九月份，我接到了入职以来第一个PR (Problem Report?)，来自🇦🇺的一个cloud service provider。当时没什么经验的我看着这个custo</description>
    </item>
    
    <item>
      <title>对象存储vs块存储</title>
      <link>https://zyt153.github.io/post/object_storage_vs_block_storage/</link>
      <pubDate>Thu, 07 Sep 2023 13:13:09 +0800</pubDate>
      
      <guid>https://zyt153.github.io/post/object_storage_vs_block_storage/</guid>
      <description>什么是块存储？ 块存储（Block Storage）是最古老、最简单的数字存储形式。在块存储中，数据被存储在固定大小的“块”中，每个block通</description>
    </item>
    
    <item>
      <title>对象存储vs文件存储</title>
      <link>https://zyt153.github.io/post/object_storage_vs_file_storage/</link>
      <pubDate>Sun, 03 Sep 2023 22:20:27 +0800</pubDate>
      
      <guid>https://zyt153.github.io/post/object_storage_vs_file_storage/</guid>
      <description>对象存储（Object Storage）出现在90年代中期，作为一种比较新的存储方式，本文将比较它和传统的存储系统，如块存储（Block Sto</description>
    </item>
    
    <item>
      <title>Jane Theme Preview</title>
      <link>https://zyt153.github.io/post/jane-theme-preview/</link>
      <pubDate>Mon, 01 Jan 2018 16:01:23 +0800</pubDate>
      
      <guid>https://zyt153.github.io/post/jane-theme-preview/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Markdown&lt;/strong&gt; is created by &lt;a href=&#34;http://daringfireball.net/&#34;&gt;Daring Fireball&lt;/a&gt;, the original guideline is &lt;a href=&#34;http://daringfireball.net/projects/markdown/syntax&#34;&gt;here&lt;/a&gt;. Its syntax, however, varies between different parsers or editors.&lt;/p&gt;
&lt;p&gt;Please note that HTML fragments in markdown source will be recognized but not parsed or rendered. Also, there may be small reformatting on the original markdown source code after saving.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
